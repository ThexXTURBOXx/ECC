#ifndef ECC_BCH_H
#define ECC_BCH_H

#include "CoCoA/library.H"

using namespace std;

namespace CoCoA {

  struct BCH {
    const long q;
    const long qn;
    const long n;
    const long k;
    const long d;
    const long c;
    const RingElem a;
    const RingElem g;
    const RingElem x;

    BCH(const long q, const long qn, const long n, const long k,
        const long d, const long c, RingElem a, RingElem g, RingElem x)
        : q(q), qn(qn), n(n), k(k), d(d), c(c),
          a(std::move(a)), g(std::move(g)), x(std::move(x)) {
    }
  };

  // d = Designed distance
  // f = Primitive polynomial, dependent on "alpha"
  // f could be generated by, e.g., https://www.researchgate.net/publication/251501522
  BCH constructBCH(long q, long d, long c, const string &prim, const string &alpha, const string &x);

  RingElem encodeBCH(const BCH &bch, ConstRefRingElem p);

  RingElem decodeBCH(const BCH &bch, ConstRefRingElem p);

  RingElem decodeBCHGroebner(const BCH &bch, ConstRefRingElem p);

}

#endif // ECC_BCH_H
